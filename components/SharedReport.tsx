'use client'

import { useState, useEffect } from 'react'
import { Download, Shield, Clock, Eye } from 'lucide-react'
import { ShareService } from '@/lib/shareService'
import { PDFReport, ShareLink } from '@/types'

interface SharedReportProps {
  token: string
}

export default function SharedReport({ token }: SharedReportProps) {
  const [report, setReport] = useState<PDFReport | null>(null)
  const [shareLink, setShareLink] = useState<ShareLink | null>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [downloading, setDownloading] = useState(false)

  useEffect(() => {
    loadSharedReport()
  }, [token])

  const loadSharedReport = async () => {
    try {
      const [reportData, linkData] = await Promise.all([
        ShareService.getSharedReport(token),
        ShareService.accessShareLink(token)
      ])
      
      if (!reportData || !linkData) {
        setError('Report not found or has expired')
        return
      }
      
      setReport(reportData)
      setShareLink(linkData)
    } catch (error) {
      console.error('Error loading shared report:', error)
      setError('Failed to load report')
    } finally {
      setLoading(false)
    }
  }

  const handleDownload = async () => {
    if (!report) return
    
    setDownloading(true)
    try {
      const url = URL.createObjectURL(report.blob)
      const a = document.createElement('a')
      a.href = url
      a.download = report.filename
      document.body.appendChild(a)
      a.click()
      document.body.removeChild(a)
      URL.revokeObjectURL(url)
    } catch (error) {
      console.error('Error downloading report:', error)
      alert('Failed to download report')
    } finally {
      setDownloading(false)
    }
  }

  const getTimeUntilExpiry = () => {
    if (!shareLink) return ''
    
    const now = new Date()
    const expiry = new Date(shareLink.expiresAt)
    const diffMs = expiry.getTime() - now.getTime()
    
    if (diffMs <= 0) return 'Expired'
    
    const diffHours = Math.floor(diffMs / (1000 * 60 * 60))
    const diffDays = Math.floor(diffHours / 24)
    
    if (diffDays > 0) {
      return `${diffDays} day${diffDays !== 1 ? 's' : ''} remaining`
    } else if (diffHours > 0) {
      return `${diffHours} hour${diffHours !== 1 ? 's' : ''} remaining`
    } else {
      const diffMinutes = Math.floor(diffMs / (1000 * 60))
      return `${diffMinutes} minute${diffMinutes !== 1 ? 's' : ''} remaining`
    }
  }

  if (loading) {
    return (
      <div className="min-h-screen-mobile flex items-center justify-center">
        <div className="loading-spinner w-8 h-8"></div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="min-h-screen-mobile flex items-center justify-center">
        <div className="text-center p-6">
          <Shield className="w-16 h-16 text-gray-400 mx-auto mb-4" />
          <h1 className="text-xl font-semibold text-gray-900 mb-2">Report Unavailable</h1>
          <p className="text-gray-600 mb-6">{error}</p>
          <p className="text-sm text-gray-500">
            This link may have expired or been revoked. Shared reports are available for 7 days only.
          </p>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen-mobile bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <div>
              <h1 className="text-lg font-semibold text-gray-900">Shared Inspection Report</h1>
              <p className="text-sm text-gray-600">Generated by DepositDefender</p>
            </div>
            <button
              onClick={handleDownload}
              disabled={downloading}
              className="btn-primary flex items-center gap-2"
            >
              {downloading ? (
                <>
                  <div className="loading-spinner w-4 h-4"></div>
                  Downloading...
                </>
              ) : (
                <>
                  <Download className="w-4 h-4" />
                  Download PDF
                </>
              )}
            </button>
          </div>
        </div>
      </header>

      <main className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Security Notice */}
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
          <div className="flex items-start gap-3">
            <Shield className="w-5 h-5 text-blue-600 mt-0.5" />
            <div>
              <h3 className="font-medium text-blue-900 mb-1">Secure Document Sharing</h3>
              <p className="text-sm text-blue-800">
                This is a secure, temporary link to a move-out inspection report. 
                The link will automatically expire for security purposes.
              </p>
            </div>
          </div>
        </div>

        {/* Report Info */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6">
          <div className="flex items-start justify-between mb-4">
            <div>
              <h2 className="text-xl font-semibold text-gray-900 mb-2">
                Move-Out Inspection Report
              </h2>
              <div className="space-y-1 text-sm text-gray-600">
                <div className="flex items-center gap-2">
                  <Clock className="w-4 h-4" />
                  Generated on {new Date(report!.generatedAt).toLocaleDateString()}
                </div>
                <div className="flex items-center gap-2">
                  <Eye className="w-4 h-4" />
                  Accessed {shareLink!.accessCount} time{shareLink!.accessCount !== 1 ? 's' : ''}
                </div>
              </div>
            </div>
            <div className="text-right">
              <div className="text-sm font-medium text-gray-900">
                File: {report!.filename}
              </div>
              <div className="text-sm text-gray-600">
                Size: {Math.round(report!.blob.size / 1024)} KB
              </div>
            </div>
          </div>

          {/* Expiry Warning */}
          <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-3">
            <div className="flex items-center gap-2">
              <Clock className="w-4 h-4 text-yellow-600" />
              <span className="text-sm font-medium text-yellow-900">
                Link Expiry: {getTimeUntilExpiry()}
              </span>
            </div>
            <p className="text-xs text-yellow-800 mt-1">
              Download now if you need to keep this report. The link will be automatically revoked after 7 days.
            </p>
          </div>
        </div>

        {/* Download Section */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
          <div className="text-center">
            <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <Download className="w-8 h-8 text-red-600" />
            </div>
            <h3 className="text-lg font-semibold text-gray-900 mb-2">
              Download Inspection Report
            </h3>
            <p className="text-gray-600 mb-6">
              This comprehensive PDF report contains detailed documentation of the property condition 
              at the time of move-out, including photos and condition assessments for each room.
            </p>
            <button
              onClick={handleDownload}
              disabled={downloading}
              className="btn-primary text-lg px-8 py-3"
            >
              {downloading ? (
                <div className="flex items-center gap-3">
                  <div className="loading-spinner w-5 h-5"></div>
                  Preparing Download...
                </div>
              ) : (
                <div className="flex items-center gap-3">
                  <Download className="w-5 h-5" />
                  Download PDF Report
                </div>
              )}
            </button>
          </div>
        </div>

        {/* About DepositDefender */}
        <div className="mt-8 text-center">
          <div className="bg-gray-100 rounded-lg p-6">
            <h3 className="font-medium text-gray-900 mb-2">About DepositDefender</h3>
            <p className="text-sm text-gray-600 mb-4">
              This report was generated using DepositDefender, a privacy-first move-out inspection app 
              that helps renters protect their security deposits with systematic documentation.
            </p>
            <a
              href="/"
              className="text-primary-600 hover:text-primary-700 text-sm font-medium"
            >
              Learn more about DepositDefender â†’
            </a>
          </div>
        </div>
      </main>
    </div>
  )
}